# Generated by Django 5.2.5 on 2025-08-26 19:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('level', models.IntegerField()),
                ('api_id', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=9)),
                ('start_year', models.IntegerField()),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='predictions.league')),
            ],
            options={
                'unique_together': {('league', 'start_year')},
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('api_id', models.IntegerField(unique=True)),
                ('season', models.ManyToManyField(related_name='teams', to='predictions.season')),
            ],
        ),
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('home_score', models.IntegerField(blank=True, null=True)),
                ('away_score', models.IntegerField(blank=True, null=True)),
                ('api_id', models.IntegerField(unique=True)),
                ('status', models.CharField(choices=[('NS', 'zaplanowany'), ('1H', '1 połowa'), ('HT', 'przerwa'), ('2H', '2 połowa'), ('LIVE', 'trwa'), ('FT', 'zakończony'), ('PST', 'przełożony'), ('CANC', 'odwołany')], default='NS', max_length=20)),
                ('round', models.IntegerField(blank=True, null=True)),
                ('round_name', models.CharField(blank=True, max_length=50, null=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixtures', to='predictions.season')),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='predictions.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='predictions.team')),
            ],
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('access_code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('start_round', models.IntegerField(blank=True, null=True)),
                ('end_round', models.IntegerField(blank=True, null=True)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='administered_groups', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='user_groups', to=settings.AUTH_USER_MODEL)),
                ('season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_groups', to='predictions.season')),
            ],
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_home_score', models.IntegerField()),
                ('predicted_away_score', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('points_awarded', models.IntegerField(default=0)),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='predictions.fixture')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to=settings.AUTH_USER_MODEL)),
                ('user_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='predictions.usergroup')),
            ],
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['api_id', 'status'], name='predictions_api_id_f6c59c_idx'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['status'], name='predictions_status_4d5d89_idx'),
        ),
        migrations.AddIndex(
            model_name='fixture',
            index=models.Index(fields=['season', 'round'], name='predictions_season__19f74b_idx'),
        ),
        migrations.AddIndex(
            model_name='prediction',
            index=models.Index(fields=['user_group', 'fixture'], name='predictions_user_gr_052af4_idx'),
        ),
        migrations.AddIndex(
            model_name='prediction',
            index=models.Index(fields=['user', 'user_group'], name='predictions_user_id_451809_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='prediction',
            unique_together={('user', 'user_group', 'fixture')},
        ),
    ]
